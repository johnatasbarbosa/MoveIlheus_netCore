#pragma checksum "C:\Users\johna\Documents\MoveIlheus\MoveIlheus\Views\Cadastro\_ConteudoDesenho.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4ca2e75050148a334a8a9ca5ea6ca4f1a6dce0c5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Cadastro__ConteudoDesenho), @"mvc.1.0.view", @"/Views/Cadastro/_ConteudoDesenho.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Cadastro/_ConteudoDesenho.cshtml", typeof(AspNetCore.Views_Cadastro__ConteudoDesenho))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\johna\Documents\MoveIlheus\MoveIlheus\Views\_ViewImports.cshtml"
using MoveIlheus;

#line default
#line hidden
#line 2 "C:\Users\johna\Documents\MoveIlheus\MoveIlheus\Views\_ViewImports.cshtml"
using MoveIlheus.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4ca2e75050148a334a8a9ca5ea6ca4f1a6dce0c5", @"/Views/Cadastro/_ConteudoDesenho.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e7cd3b48c05bf2133f429aa2d84a7d86838293c4", @"/Views/_ViewImports.cshtml")]
    public class Views_Cadastro__ConteudoDesenho : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2477, true);
            WriteLiteral(@"<div v-if=""conteudoEditando != -1"" class=""modal fade"" id=""modalConteudoDesenho"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""exampleModalLabel"">{{ formulario.paginas[paginaAtual].conteudos[conteudoEditando].texto }}</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                <div v-if=""conteudoEditando != -1"">
                    <draggable :list=""formulario.paginas[paginaAtual].conteudos[conteudoEditando].conteudosDesenhos"" :options=""{handle:'.handle'}"" v-on:change=""formulario.paginas[paginaAtual].conteudos[conteudoEditando].atualizarSequenciaConteudosDesenho()"" style=""width: 100%;"">
          ");
            WriteLiteral(@"              <div v-for=""(conteudo, index) in formulario.paginas[paginaAtual].conteudos[conteudoEditando].conteudosDesenhos"" class=""list-group-item"">
                            <h5 class=""questionHeader col-sm-12"" style=""z-index: 1;"">
                                <span style=""float: right;"" v-if=""conteudoDesenhoEditando == index || conteudoDesenhoEditando == -1"">
                                    <span v-if=""index == conteudoDesenhoEditando"">
                                        <input type=""checkbox"" v-model=""conteudo.obrigatorio"" />
                                    </span>
                                    <span v-if=""index == conteudoDesenhoEditando"" class=""fa fa-trash btnEdit"" v-on:click=""formulario.paginas[paginaAtual].conteudos[conteudoEditando].excluirConteudoDesenho(conteudo, index)""></span>
                                    <span v-if=""index != conteudoDesenhoEditando"" class=""fa fa-edit btnEdit"" v-on:click=""conteudoDesenhoEditando = index""></span>
                            ");
            WriteLiteral(@"        <span v-if=""index == conteudoDesenhoEditando"" class=""fa fa-check btnEdit"" v-on:click=""conteudo.salvar(formulario.paginas[paginaAtual].conteudos[conteudoEditando].id)""></span>
                                    <span v-if=""index != conteudoDesenhoEditando"" class=""handle""><i class=""fa fa-align-justify""></i></span>
                                </span>
                            </h5>
                            ");
            EndContext();
            BeginContext(2478, 33, false);
#line 25 "C:\Users\johna\Documents\MoveIlheus\MoveIlheus\Views\Cadastro\_ConteudoDesenho.cshtml"
                       Write(Html.Partial("_ConteudosDesenho"));

#line default
#line hidden
            EndContext();
            BeginContext(2511, 1166, true);
            WriteLiteral(@"
                        </div>
                    </draggable>
                    <div v-if=""conteudoDesenhoEditando == -1"" class=""col-sm-12"">
                        <div class=""btn-group dropright"">
                            <button v-on:click=""adicionandoConteudo = !adicionandoConteudo"" type=""button"" class=""btn btn-primary dropdown-toggle"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                <span class=""fa fa-plus""></span>
                                Adicionar Conte√∫do
                            </button>
                            <div class=""dropdown-menu"">
                                <a v-for=""opcao in optionsDesenhos"" v-on:click=""selecionarTipoConteudoDesenho(opcao.value)"" :value=""opcao"" class=""dropdown-item"" href=""#"">{{ opcao.text }}</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
               ");
            WriteLiteral(" <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
