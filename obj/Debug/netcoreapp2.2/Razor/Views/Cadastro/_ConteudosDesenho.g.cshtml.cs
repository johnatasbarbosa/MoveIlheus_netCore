#pragma checksum "c:\Users\johna\Documents\MoveIlheus\MoveIlheus\Views\Cadastro\_ConteudosDesenho.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "71b59f34dd173b51339545e49b6b2949ef96813c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Cadastro__ConteudosDesenho), @"mvc.1.0.view", @"/Views/Cadastro/_ConteudosDesenho.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Cadastro/_ConteudosDesenho.cshtml", typeof(AspNetCore.Views_Cadastro__ConteudosDesenho))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "c:\Users\johna\Documents\MoveIlheus\MoveIlheus\Views\_ViewImports.cshtml"
using MoveIlheus;

#line default
#line hidden
#line 2 "c:\Users\johna\Documents\MoveIlheus\MoveIlheus\Views\_ViewImports.cshtml"
using MoveIlheus.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"71b59f34dd173b51339545e49b6b2949ef96813c", @"/Views/Cadastro/_ConteudosDesenho.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e7cd3b48c05bf2133f429aa2d84a7d86838293c4", @"/Views/_ViewImports.cshtml")]
    public class Views_Cadastro__ConteudosDesenho : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("opcao in conteudo.opcoes"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("opcao"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Images/icon_marker.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 30px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Images/icon_line.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Images/icon_polygon.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 3358, true);
            WriteLiteral(@"<div class=""contentsBody col-sm-12"" style=""z-index: 0;"">
    <div v-if=""conteudo.tipo == 1"">
        <h5>
            <span v-if=""index != conteudoDesenhoEditando"">{{ conteudo.texto }}</span>
            <input v-if=""index == conteudoDesenhoEditando"" v-model=""conteudo.texto"" placeholder=""Insira a pergunta"" class=""form-control"" type=""text"">
        </h5>
        <ul v-if=""index == conteudoDesenhoEditando"">
            <li v-for=""(opcao, indexQ) in conteudo.opcoes"">
                <input type=""text"" v-model=""opcao.texto"">
                <span class=""fa fa-times btnEdit"" v-on:click=""formulario.paginas[paginaAtual].conteudos[conteudoEditando].conteudosDesenhos[index].removerOpcao(indexQ)""></span>
            </li>
            <content>
                <span class=""fa fa-plus-circle btnEdit"" v-on:click=""formulario.paginas[paginaAtual].conteudos[conteudoEditando].conteudosDesenhos[index].adicionarOpcao""></span>
            </content>
        </ul>
        <div v-if=""index != conteudoDesenhoEditando");
            WriteLiteral(@""" v-for=""(opcao, indexQ) in conteudo.opcoes"">
            <input type=""radio"" name=""opcoes"">
            <span>{{ opcao.texto }}</span>
        </div>
    </div>
    <div v-if=""conteudo.tipo == 2"">
        <h5>
            <span v-if=""index != conteudoDesenhoEditando"">{{ conteudo.texto }}</span>
            <input v-if=""index == conteudoDesenhoEditando"" v-model=""conteudo.texto"" placeholder=""Insira a pergunta"" class=""form-control"" type=""text"">
        </h5>
        <ul v-if=""index == conteudoDesenhoEditando"">
            <li v-for=""(opcao, indexQ) in conteudo.opcoes"">
                <input type=""text"" v-model=""opcao.texto"">
                <span class=""fa fa-times btnEdit"" v-on:click=""formulario.paginas[paginaAtual].conteudos[conteudoEditando].conteudosDesenhos[index].removerOpcao(indexQ)""></span>
            </li>
            <content>
                <span class=""fa fa-plus-circle btnEdit"" v-on:click=""formulario.paginas[paginaAtual].conteudos[conteudoEditando].conteudosDesenhos[index].adicio");
            WriteLiteral(@"narOpcao""></span>
            </content>
        </ul>
        <div v-if=""index != conteudoDesenhoEditando"" v-for=""(opcao, indexQ) in conteudo.opcoes"">
            <input type=""checkbox"" name=""opcoes"">
            <span>{{ opcao.texto }}</span>
        </div>
    </div>
    <div v-if=""conteudo.tipo == 3"">
        <h5>
            <span v-if=""index != conteudoDesenhoEditando"">{{ conteudo.texto }}</span>
            <input v-if=""index == conteudoDesenhoEditando"" v-model=""conteudo.texto"" placeholder=""Insira a pergunta"" class=""form-control"" type=""text"">
        </h5>
        <ul v-if=""index == conteudoDesenhoEditando"">
            <li v-for=""(opcao, indexQ) in conteudo.opcoes"">
                <input type=""text"" v-model=""opcao.texto"">
                <span class=""fa fa-times btnEdit"" v-on:click=""formulario.paginas[paginaAtual].conteudos[conteudoEditando].conteudosDesenhos[index].removerOpcao(indexQ)""></span>
            </li>
            <content>
                <span class=""fa fa-plus-circle ");
            WriteLiteral(@"btnEdit"" v-on:click=""formulario.paginas[paginaAtual].conteudos[conteudoEditando].conteudosDesenhos[index].adicionarOpcao""></span>
            </content>
        </ul>
        <select v-if=""index != conteudoDesenhoEditando"" class=""form-control"" style=""max-width: none;"">
            ");
            EndContext();
            BeginContext(3358, 57, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "71b59f34dd173b51339545e49b6b2949ef96813c10297", async() => {
                BeginContext(3394, 12, true);
                WriteLiteral("Selecione...");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3415, 14, true);
            WriteLiteral("\r\n            ");
            EndContext();
            BeginContext(3429, 82, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "71b59f34dd173b51339545e49b6b2949ef96813c12316", async() => {
                BeginContext(3485, 17, true);
                WriteLiteral("{{ opcao.texto }}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3511, 5758, true);
            WriteLiteral(@"
        </select>
    </div>
    <div v-if=""conteudo.tipo == 4"">
        <h5>
            <span v-if=""index != conteudoDesenhoEditando"">{{ conteudo.texto }}</span>
            <input v-if=""index == conteudoDesenhoEditando"" v-model=""conteudo.texto"" placeholder=""Insira a pergunta"" class=""form-control"" type=""text"">
        </h5>
        <div v-if=""index == conteudoDesenhoEditando"" class=""form-inline"">
            <input v-model=""conteudo.opcoes[0].texto"" size=""10"" class=""form-control"" />
            <input type=""range"" v-model=""conteudo.valor"" min=""1"" max=""100"" class=""slider"" id=""myRange"">
            <input v-model=""conteudo.opcoes[1].texto"" size=""10"" class=""form-control"" />
        </div>
        <div v-if=""index != conteudoDesenhoEditando"" style=""text-align: center;"">
            <span>{{ conteudo.opcoes[0].texto}}</span>
            <input type=""range"" v-model=""conteudo.valor"" min=""1"" max=""100"" class=""slider"" id=""myRange"">
            <span>{{ conteudo.opcoes[1].texto}}</span>
        </div");
            WriteLiteral(@">
    </div>
    <div v-if=""conteudo.tipo == 5"">
        <h5>
            <span v-if=""index != conteudoDesenhoEditando"">{{ conteudo.texto }}</span>
            <input v-if=""index == conteudoDesenhoEditando"" v-model=""conteudo.texto"" placeholder=""Insira a pergunta"" class=""form-control"" type=""text"">
        </h5>
        <div v-if=""index == conteudoDesenhoEditando"" class=""form-inline"">
            <input v-model=""conteudo.valor"" type=""number"" min=""1"" class=""form-control"" />
        </div>
        <div v-if=""index != conteudoDesenhoEditando"">
            <div v-for=""(opcao, index) in conteudo.opcoes"" class=""form-inline"">
                <span>{{ index + 1 }} - &nbsp;</span>
                <input class=""form-control"" />
            </div>
        </div>
    </div>
    <div v-if=""conteudo.tipo == 6"">
        <div v-if=""index == conteudoDesenhoEditando"">
            <table class=""table table-striped table-bordered table-sm"">
                <tr>
                    <td>
                       ");
            WriteLiteral(@" <input v-model=""conteudo.texto"" placeholder=""Insira a pergunta"" type=""text"">
                    </td>
                    <td>0/100</td>
                </tr>
                <tr v-for=""(opcao, indexO) in conteudo.opcoes"">
                    <td>
                        <input v-model=""opcao.texto"" type=""text"">
                    </td>
                    <td>
                        <input type=""number"" v-model=""opcao.valor"" min=""0"">
                    </td>
                    <td>
                        <span class=""fa fa-times btnEdit"" v-on:click=""formulario.paginas[paginaAtual].conteudos[conteudoEditando].conteudosDesenhos[index].removerOpcao(indexO)""></span>
                    </td>
                </tr>
                <tr>
                    <td>
                        <span class=""fa fa-plus-circle btnEdit"" v-on:click=""formulario.paginas[paginaAtual].conteudos[conteudoEditando].conteudosDesenhos[index].adicionarOpcao""></span>
                    </td>
                </tr>");
            WriteLiteral(@"
            </table>
        </div>
        <div v-if=""index != conteudoDesenhoEditando"">
            <table class=""table table-striped table-bordered table-hover table-sm"">
                <tr>
                    <td>{{ conteudo.texto }}</td>
                    <td>0/100</td>
                </tr>
                <tr v-for=""opcao in conteudo.opcoes"">
                    <td>{{ opcao.texto }}</td>
                    <td>
                        <input type=""number"" v-model=""opcao.valor"" value=""0"" min=""0"">
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div v-if=""conteudo.tipo == 7"">
        <h5>
            <span v-if=""index != conteudoDesenhoEditando"">{{ conteudo.texto }}</span>
            <input v-if=""index == conteudoDesenhoEditando"" v-model=""conteudo.texto"" placeholder=""Insira a pergunta"" class=""form-control"" type=""text"">
        </h5>
        <div v-if=""index != conteudoDesenhoEditando"">
            <input type=""text"" class=");
            WriteLiteral(@"""form-control"">
        </div>
    </div>
    <div v-if=""conteudo.tipo == 8"">
        <h5>
            <span v-if=""index != conteudoDesenhoEditando"">{{ conteudo.texto }}</span>
            <input v-if=""index == conteudoDesenhoEditando"" v-model=""conteudo.texto"" placeholder=""Insira a pergunta"" class=""form-control"" type=""text"">
        </h5>
        <div v-if=""index != conteudoDesenhoEditando"">
            <textarea class=""form-control"" rows=""5"" style=""resize: none""></textarea>
        </div>
    </div>
    <div v-if=""conteudo.tipo == 9"">
        <div v-if=""index == conteudoDesenhoEditando"">
            <textarea rows=""10"" v-model=""conteudo.texto""></textarea>
        </div>
        <div v-if=""index != conteudoDesenhoEditando"">
            <p style=""white-space: pre-wrap; overflow-wrap: break-word; text-align: justify;"">{{ conteudo.texto }}</p>
        </div>
    </div>
    <div v-if=""conteudo.tipo == 10"">
        <div v-if=""index == conteudoDesenhoEditando"">
            <input v-model=""cont");
            WriteLiteral(@"eudo.texto"" type=""text"" class=""form-control"">
        </div>
        <div v-if=""index != conteudoDesenhoEditando"">
            <h3>{{ conteudo.texto }}</h3>
        </div>
    </div>
    <div v-if=""conteudo.tipo == 11"">
        <div v-if=""index == conteudoDesenhoEditando"">
            <button class=""btn btn-default"" style=""width: 75%; min-height: 60px;"">
                <div style=""width: 80%; float: left;"">
                    <input v-model=""conteudo.texto"" />
                </div>
                <div style=""width: 20%; float: right;"">
                    <select v-model=""conteudo.valor"">
                        ");
            EndContext();
            BeginContext(9269, 33, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "71b59f34dd173b51339545e49b6b2949ef96813c19808", async() => {
                BeginContext(9287, 6, true);
                WriteLiteral("Marker");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9302, 26, true);
            WriteLiteral("\r\n                        ");
            EndContext();
            BeginContext(9328, 31, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "71b59f34dd173b51339545e49b6b2949ef96813c21210", async() => {
                BeginContext(9346, 4, true);
                WriteLiteral("Line");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9359, 26, true);
            WriteLiteral("\r\n                        ");
            EndContext();
            BeginContext(9385, 34, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "71b59f34dd173b51339545e49b6b2949ef96813c22610", async() => {
                BeginContext(9403, 7, true);
                WriteLiteral("Polygon");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9419, 502, true);
            WriteLiteral(@"
                    </select>
                </div>
            </button>
        </div>
        <div v-if=""index != conteudoDesenhoEditando"">
            <button class=""btn btn-default"" style=""width: 75%; min-height: 60px;"">
                <div style=""width: 80%; float: left;"">
                    <h6>{{ conteudo.texto }}</h6>
                </div>
                <div style=""width: 20%; float: right;"">
                    <span v-if=""conteudo.valor == 1"">
                        ");
            EndContext();
            BeginContext(9921, 59, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "71b59f34dd173b51339545e49b6b2949ef96813c24501", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9980, 110, true);
            WriteLiteral("\r\n                    </span>\r\n                    <span v-if=\"conteudo.valor == 2\">\r\n                        ");
            EndContext();
            BeginContext(10090, 57, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "71b59f34dd173b51339545e49b6b2949ef96813c25872", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10147, 110, true);
            WriteLiteral("\r\n                    </span>\r\n                    <span v-if=\"conteudo.valor == 3\">\r\n                        ");
            EndContext();
            BeginContext(10257, 60, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "71b59f34dd173b51339545e49b6b2949ef96813c27244", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10317, 565, true);
            WriteLiteral(@"
                    </span>
                </div>
            </button>
        </div>
    </div>
    <div v-if=""conteudo.tipo == 13"">
        <h5>
            <span v-if=""index != conteudoDesenhoEditando"">{{ conteudo.texto }}</span>
            <input v-if=""index == conteudoDesenhoEditando"" v-model=""conteudo.texto"" placeholder=""Insira a pergunta"" class=""form-control"" type=""text"">
        </h5>
        <div v-if=""index != conteudoDesenhoEditando"">
            <input type=""number"" min=""18"" class=""form-control"">
        </div>
    </div>
</div>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
