// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoveIlheus;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MoveIlheus.Migrations
{
    [DbContext(typeof(MoveIlheusContexto))]
    [Migration("20190728205424_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("MoveIlheus.Models.Conteudo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MensagemNovoDesenho");

                    b.Property<bool>("Obrigatorio");

                    b.Property<int>("PaginaId");

                    b.Property<int>("Sequencia");

                    b.Property<string>("Texto");

                    b.Property<int>("Tipo");

                    b.Property<string>("TituloConteudosDesenho");

                    b.Property<int>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("PaginaId");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("MoveIlheus.Models.ConteudoDesenho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ConteudoId");

                    b.Property<bool>("Obrigatorio");

                    b.Property<int>("Sequencia");

                    b.Property<string>("Texto");

                    b.Property<int>("Tipo");

                    b.Property<int>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("ConteudoId");

                    b.ToTable("DrawingsContents");
                });

            modelBuilder.Entity("MoveIlheus.Models.Coordenada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DesenhoId");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.HasKey("Id");

                    b.HasIndex("DesenhoId");

                    b.ToTable("Coordinates");
                });

            modelBuilder.Entity("MoveIlheus.Models.Desenho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RespostaId");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("RespostaId");

                    b.ToTable("Drawings");
                });

            modelBuilder.Entity("MoveIlheus.Models.Formulario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("MoveIlheus.Models.Opcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ConteudoDesenhoId");

                    b.Property<int?>("ConteudoId");

                    b.Property<string>("Texto");

                    b.Property<int>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("ConteudoDesenhoId");

                    b.HasIndex("ConteudoId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("MoveIlheus.Models.OpcaoResposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("OpcaoId");

                    b.Property<int?>("RespostaDesenhoId");

                    b.Property<int?>("RespostaId");

                    b.Property<int>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("OpcaoId");

                    b.HasIndex("RespostaDesenhoId");

                    b.HasIndex("RespostaId");

                    b.ToTable("AnswerOptions");
                });

            modelBuilder.Entity("MoveIlheus.Models.Pagina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Dimensao");

                    b.Property<bool>("Final");

                    b.Property<int>("FormularioId");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<int?>("ProximaPaginaId");

                    b.Property<int>("Sequencia");

                    b.Property<string>("Titulo");

                    b.Property<int>("ZoomLevel");

                    b.HasKey("Id");

                    b.HasIndex("FormularioId");

                    b.HasIndex("ProximaPaginaId");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("MoveIlheus.Models.Respondente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<TimeSpan>("Duracao");

                    b.Property<string>("Email");

                    b.HasKey("Id");

                    b.ToTable("Respondents");
                });

            modelBuilder.Entity("MoveIlheus.Models.Resposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ConteudoId");

                    b.Property<bool>("Marcado");

                    b.Property<int?>("OpcaoId");

                    b.Property<int>("RespondenteId");

                    b.Property<string>("Texto");

                    b.Property<int>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("ConteudoId");

                    b.HasIndex("OpcaoId");

                    b.HasIndex("RespondenteId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("MoveIlheus.Models.RespostaDesenho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ConteudoDesenhoId");

                    b.Property<int>("DesenhoId");

                    b.Property<bool>("Marcado");

                    b.Property<int?>("OpcaoId");

                    b.Property<string>("Texto");

                    b.Property<int>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("ConteudoDesenhoId");

                    b.HasIndex("DesenhoId");

                    b.HasIndex("OpcaoId");

                    b.ToTable("DrawingsAnswers");
                });

            modelBuilder.Entity("MoveIlheus.Models.RestricaoConteudo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ConteudoAlvoId");

                    b.Property<int>("ConteudoId");

                    b.Property<string>("Nome");

                    b.Property<int>("OpcaoAlvoId");

                    b.Property<int>("PaginaAlvoId");

                    b.HasKey("Id");

                    b.HasIndex("ConteudoId");

                    b.ToTable("ContentRestrictions");
                });

            modelBuilder.Entity("MoveIlheus.Models.RestricaoConteudoPagina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ConteudoId");

                    b.Property<string>("Nome");

                    b.Property<int>("OpcaoId");

                    b.Property<int>("RestricaoPaginaId");

                    b.HasKey("Id");

                    b.HasIndex("ConteudoId");

                    b.HasIndex("OpcaoId");

                    b.HasIndex("RestricaoPaginaId");

                    b.ToTable("ContentsRestrictionsPage");
                });

            modelBuilder.Entity("MoveIlheus.Models.RestricaoPagina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<int>("PaginaId");

                    b.Property<int>("ProximaPaginaId");

                    b.HasKey("Id");

                    b.HasIndex("PaginaId");

                    b.ToTable("PageRestrictions");
                });

            modelBuilder.Entity("MoveIlheus.Models.Conteudo", b =>
                {
                    b.HasOne("MoveIlheus.Models.Pagina", "Pagina")
                        .WithMany("Conteudos")
                        .HasForeignKey("PaginaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoveIlheus.Models.ConteudoDesenho", b =>
                {
                    b.HasOne("MoveIlheus.Models.Conteudo", "Conteudo")
                        .WithMany("ConteudosDesenhos")
                        .HasForeignKey("ConteudoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoveIlheus.Models.Coordenada", b =>
                {
                    b.HasOne("MoveIlheus.Models.Desenho", "Desenho")
                        .WithMany("Coordenadas")
                        .HasForeignKey("DesenhoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoveIlheus.Models.Desenho", b =>
                {
                    b.HasOne("MoveIlheus.Models.Resposta", "Resposta")
                        .WithMany("Desenhos")
                        .HasForeignKey("RespostaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoveIlheus.Models.Opcao", b =>
                {
                    b.HasOne("MoveIlheus.Models.ConteudoDesenho", "ConteudoDesenho")
                        .WithMany("Opcoes")
                        .HasForeignKey("ConteudoDesenhoId");

                    b.HasOne("MoveIlheus.Models.Conteudo", "Conteudo")
                        .WithMany("Opcoes")
                        .HasForeignKey("ConteudoId");
                });

            modelBuilder.Entity("MoveIlheus.Models.OpcaoResposta", b =>
                {
                    b.HasOne("MoveIlheus.Models.Opcao", "Opcao")
                        .WithMany("OpcoesResposta")
                        .HasForeignKey("OpcaoId");

                    b.HasOne("MoveIlheus.Models.RespostaDesenho", "RespostaDesenho")
                        .WithMany("Opcoes")
                        .HasForeignKey("RespostaDesenhoId");

                    b.HasOne("MoveIlheus.Models.Resposta", "Resposta")
                        .WithMany("Opcoes")
                        .HasForeignKey("RespostaId");
                });

            modelBuilder.Entity("MoveIlheus.Models.Pagina", b =>
                {
                    b.HasOne("MoveIlheus.Models.Formulario", "Formulario")
                        .WithMany("Paginas")
                        .HasForeignKey("FormularioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoveIlheus.Models.Pagina", "ProximaPagina")
                        .WithMany()
                        .HasForeignKey("ProximaPaginaId");
                });

            modelBuilder.Entity("MoveIlheus.Models.Resposta", b =>
                {
                    b.HasOne("MoveIlheus.Models.Conteudo", "Conteudo")
                        .WithMany("Respostas")
                        .HasForeignKey("ConteudoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoveIlheus.Models.Opcao", "Opcao")
                        .WithMany()
                        .HasForeignKey("OpcaoId");

                    b.HasOne("MoveIlheus.Models.Respondente", "Respondente")
                        .WithMany("Respostas")
                        .HasForeignKey("RespondenteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoveIlheus.Models.RespostaDesenho", b =>
                {
                    b.HasOne("MoveIlheus.Models.ConteudoDesenho", "ConteudoDesenho")
                        .WithMany("Respostas")
                        .HasForeignKey("ConteudoDesenhoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoveIlheus.Models.Desenho", "Desenho")
                        .WithMany("RespostasDesenho")
                        .HasForeignKey("DesenhoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoveIlheus.Models.Opcao", "Opcao")
                        .WithMany()
                        .HasForeignKey("OpcaoId");
                });

            modelBuilder.Entity("MoveIlheus.Models.RestricaoConteudo", b =>
                {
                    b.HasOne("MoveIlheus.Models.Conteudo", "Conteudo")
                        .WithMany("Restricoes")
                        .HasForeignKey("ConteudoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoveIlheus.Models.RestricaoConteudoPagina", b =>
                {
                    b.HasOne("MoveIlheus.Models.Conteudo", "Conteudo")
                        .WithMany()
                        .HasForeignKey("ConteudoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoveIlheus.Models.Opcao", "Opcao")
                        .WithMany()
                        .HasForeignKey("OpcaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoveIlheus.Models.RestricaoPagina", "RestricaoPagina")
                        .WithMany("RestricoesConteudosPagina")
                        .HasForeignKey("RestricaoPaginaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoveIlheus.Models.RestricaoPagina", b =>
                {
                    b.HasOne("MoveIlheus.Models.Pagina", "Pagina")
                        .WithMany("Restricoes")
                        .HasForeignKey("PaginaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
